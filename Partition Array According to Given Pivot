//Question link: https://leetcode.com/problems/partition-array-according-to-given-pivot/


class Solution {
public:
    vector<int> pivotArray(vector<int>& nums, int pivot) {
        vector <int> ans ;
        int p;
        int cnt=0;
        
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]<pivot)
                ans.push_back(nums[i]);
        }
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]==pivot)
                ans.push_back(nums[i]);
        }
        
        for(int j=0;j<nums.size();j++)
        {
            if(nums[j]>pivot)
                ans.push_back(nums[j]);
        }
        
       /* for(int k=0;k<ans.size();k++)
        {
            nums[k]=ans[k];
        }
        
        return nums;*/
        
        return ans;
    }        
};
