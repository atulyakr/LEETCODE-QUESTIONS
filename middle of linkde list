//Question link: https://leetcode.com/problems/middle-of-the-linked-list/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        int len=0;
        int destiny=0;
        int count=1;
        ListNode* temp=head;
        while(temp!=NULL)
        {
            len++;
            temp=temp->next;   
        }
        if(len==0 || len==1)
        {
             return head;
        }
        destiny=(len/2)+1;
        ListNode* temp2=head;
       while(count!=destiny)
       {
           temp2=temp2->next;
           count++;
           
       }
        return temp2;
    }
};
